services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-setup:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - kafka
    command: >
      bash -c "
        # Wait for Kafka to be ready
        echo 'Waiting for Kafka to be ready...'
        sleep 30
        
        # Create topics
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic air-quality-paris --partitions 3 --replication-factor 1
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic pm25-topic --partitions 3 --replication-factor 1
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic no2-topic --partitions 3 --replication-factor 1
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic o3-topic --partitions 3 --replication-factor 1
        kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic pm10-topic --partitions 3 --replication-factor 1
        
        echo 'Topic creation completed'
        kafka-topics --bootstrap-server kafka:9092 --list
      "
    restart: "no"

  influxdb:
    image: influxdb:1.8
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb
    environment:
      INFLUXDB_DB: air_quality
      INFLUXDB_HTTP_AUTH_ENABLED: "false"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - influxdb
      
  spark:
    build: ./spark
    volumes:
      - spark_temp:/tmp/spark-temp
      - spark_checkpoint:/tmp/checkpoint
    environment:
      - SPARK_LOCAL_DIRS=/tmp/spark-temp
      - SPARK_WORKER_DIR=/tmp/spark-temp
    depends_on:
      - kafka
      - kafka-setup
      - influxdb
  producer:
    build: ./producer
    environment:
      - OPENWEATHER_API_KEY=1db3aed366121b0039d8f0b8ad1f0833
    depends_on:
      - kafka
      - kafka-setup

volumes:
  influxdb_data:
  grafana_data:
  spark_temp:
  spark_checkpoint:
